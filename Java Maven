Here's a Java program that connects to an AWS RDS PostgreSQL database, and instructions on how to build it using Maven. This includes a basic Maven project structure, dependencies, and sample code.


---

✅ 1. Project Structure

aws-postgres-connector/
├── pom.xml
└── src/
    └── main/
        └── java/
            └── com/
                └── example/
                    └── AwsPostgresConnector.java


---

✅ 2. pom.xml

This Maven configuration file sets up the PostgreSQL JDBC driver:

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.example</groupId>
  <artifactId>aws-postgres-connector</artifactId>
  <version>1.0-SNAPSHOT</version>

  <properties>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
  </properties>

  <dependencies>
    <!-- PostgreSQL JDBC Driver -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>42.7.3</version>
    </dependency>
  </dependencies>
</project>


---

✅ 3. Java Code — AwsPostgresConnector.java

package com.example;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class AwsPostgresConnector {
    public static void main(String[] args) {
        // Replace with your actual AWS RDS connection details
        String host = "your-db-instance.abcdefg123456.us-west-2.rds.amazonaws.com";
        String port = "5432";
        String database = "your_database_name";
        String user = "your_db_username";
        String password = "your_db_password"; // Or use an IAM auth token

        String jdbcUrl = String.format("jdbc:postgresql://%s:%s/%s", host, port, database);

        try (Connection conn = DriverManager.getConnection(jdbcUrl, user, password)) {
            if (conn != null) {
                System.out.println("Connected to AWS PostgreSQL database successfully.");
            } else {
                System.out.println("Failed to connect.");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}


---

✅ 4. Build and Run

From your project root:

# Compile the project
mvn clean package

# Run the Java program
java -cp target/aws-postgres-connector-1.0-SNAPSHOT.jar com.example.AwsPostgresConnector


---

🔐 Notes on AWS RDS Authentication

If you're using IAM-based authentication (instead of hardcoding passwords), let me know and I can modify the code to:

Use the AWS SDK to generate an auth token.

Securely connect using the token instead of password.



---

Would you like that version too — using IAM auth tokens instead of plain text passwords?


